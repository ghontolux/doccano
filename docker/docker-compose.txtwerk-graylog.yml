version: "3.7"
services:

  backend:
    restart: unless-stopped
    container_name: doccano_backend
    hostname: ${HOST_NAME}
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_backend:prod
    volumes:
      - static_volume:/backend/staticfiles
      - media:/backend/media
    environment:
      ADMIN_USERNAME: "${ADMIN_USERNAME}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq"
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
      ALLOW_SIGNUP: "False"
      DEBUG: "False"
      DJANGO_SETTINGS_MODULE: "config.settings.production"
    depends_on:
      - postgres
    networks:
      - doccano_network-backend
      - doccano_network-frontend
    logging:
      driver: gelf
      options:
        gelf-address: "${GL_INPUT}"
        tag: "backend"
        labels: "facility"
    labels:
      facility: "doccano"

  celery:
    restart: unless-stopped
    container_name: doccano_celery
    hostname: ${HOST_NAME}
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_celery:prod
    volumes:
      - media:/backend/media
    entrypoint: ["/opt/bin/prod-celery.sh"]
    environment:
      PYTHONUNBUFFERED: "1"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq"
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
      DJANGO_SETTINGS_MODULE: "config.settings.production"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - doccano_network-backend
    logging:
      driver: gelf
      options:
        gelf-address: "${GL_INPUT}"
        tag: "celery"
        labels: "facility"
    labels:
      facility: "doccano"

  rabbitmq:
    restart: unless-stopped
    container_name: doccano_rabbitmq
    hostname: ${HOST_NAME}
    image: rabbitmq:3.8-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    ports:
      - 5672:5672
    networks:
      - doccano_network-backend
    logging:
      driver: gelf
      options:
        gelf-address: "${GL_INPUT}"
        tag: "rabbitmq"
        labels: "facility"
    labels:
      facility: "doccano"

  nginx:
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    environment:
      API_URL: "http://backend:8000"
      GOOGLE_TRACKING_ID: ""
      TXTWERK_LEXICON_TYPEAHEAD_PATH: "${TXTWERK_LEXICON_TYPEAHEAD_PATH}"
      TXTWERK_LEXICON_ENTRIES_PATH: "${TXTWERK_LEXICON_ENTRIES_PATH}"
      TXTWERK_API: "${TXTWERK_API}"
      TXTWWERK_API_KEY: "${TXTWWERK_API_KEY}"
      SERVER_AUTH: "${SERVER_AUTH}"
    restart: unless-stopped
    container_name: doccano_nginx
    hostname: ${HOST_NAME}
    volumes:
      - static_volume:/static
      - media:/media
    ## proxy routing
    #ports:
    #  - 8081:8081
    depends_on:
      - backend
    networks:
      - doccano_network-frontend
    logging:
      driver: gelf
      options:
        gelf-address: "${GL_INPUT}"
        tag: "nginx"
        labels: "facility"
    labels:
      facility: "doccano"

  postgres:
    restart: unless-stopped
    container_name: doccano_postgres
    hostname: ${HOST_NAME}
    image: postgres:13.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    networks:
      - doccano_network-backend
    logging:
      driver: gelf
      options:
        gelf-address: "${GL_INPUT}"
        tag: "postgres"
        labels: "facility"
    labels:
      facility: "doccano"

volumes:
  postgres_data:
  static_volume:
  media:

networks:
  doccano_network-backend:
  doccano_network-frontend:
    external: true
